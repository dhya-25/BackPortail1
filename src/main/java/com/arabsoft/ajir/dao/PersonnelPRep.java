package com.arabsoft.ajir.dao;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.arabsoft.ajir.entities.ClePersonnel;
import com.arabsoft.ajir.entities.PersonnelP;


@Repository
public interface PersonnelPRep  extends JpaRepository<PersonnelP, ClePersonnel>{
	
	
	@Query(value="  select cod_soc            ,\r\n"
			+ "  mat_pers          ,\r\n"
			+ "  nom_pers          ,\r\n"
			+ "  pren_pers         ,\r\n"
			+ "  nom_pers_a        ,\r\n"
			+ "  pren_pers_a       ,\r\n"
			+ "  nom_jf            ,\r\n"
			+ "  nom_jf_a          ,\r\n"
			+ "  cin               ,\r\n"
			+ "  sexe              ,\r\n"
			+ "  cod_sit           ,\r\n"
			+ "  dat_sit           ,\r\n"
			+ "  chef_fam          ,\r\n"
			+ "  nbre_enf          ,\r\n"
			+ "  charg_enf         ,\r\n"
			+ "  charg_all         ,\r\n"
			+ "  fct_fam           ,\r\n"
			+ "  dat_ent           ,\r\n"
			+ "  dat_tit           ,\r\n"
			+ "  cod_serv          ,\r\n"
			+ "  cod_fonct         ,\r\n"
			+ "  cod_categ         ,\r\n"
			+ "  cod_cat           ,\r\n"
			+ "  cod_grad          ,\r\n"
			+ "  cod_motif         ,\r\n"
			+ "  cod_natp          ,\r\n"
			+ "  cod_stat          ,\r\n"
			+ "  dat_serv          ,\r\n"
			+ "  dat_fonct         ,\r\n"
			+ "  dat_qualf         ,\r\n"
			+ "  dat_categ         ,\r\n"
			+ "  dat_cat           ,\r\n"
			+ "  dat_grad          ,\r\n"
			+ "  dat_ech           ,\r\n"
			+ "  dat_emb           ,\r\n"
			+ "  dat_motif         ,\r\n"
			+ "  dat_nais          ,\r\n"
			+ "  etat_act          ,\r\n"
			+ "  per_mat_pers      ,\r\n"
			+ "  qualf             ,\r\n"
			+ "  cod_ech           ,\r\n"
			+ "  cod_affect        ,\r\n"
			+ "  cod_niveau        ,\r\n"
			+ "  poste_trav        ,\r\n"
			+ "  cod_metier        ,\r\n"
			+ "  dat_maj           ,\r\n"
			+ "  adm_tech          ,\r\n"
			+ "  dat_stat          ,\r\n"
			+ "  dat_cin           ,\r\n"
			+ "  lie_emi_cin       ,\r\n"
			+ "  dat_affect        ,\r\n"
			+ "  lieu_nais         ,\r\n"
			+ "  cod_lieu_geog     ,\r\n"
			+ "  dat_lieu_geog     ,\r\n"
			+ "  grp_sang          ,\r\n"
			+ "  num_retr          ,\r\n"
			+ "  cod_fil           ,\r\n"
			+ "  dat_fil           ,\r\n"
			+ "  serv_mil          ,\r\n"
			+ "  code_domaine      ,\r\n"
			+ "  cod_ur            ,\r\n"
			+ "  cod_class         ,\r\n"
			+ "  dat_class         ,\r\n"
			+ "  cod_typ_depart    ,\r\n"
			+ "  dat_depart        ,\r\n"
			+ "  dat_ur            ,\r\n"
			+ "  org_serv          ,\r\n"
			+ "  dat_poste_trav    ,\r\n"
			+ "  cod_nat_recr      ,\r\n"
			+ "  dat_adm_tech      ,\r\n"
			+ "  dat_org_serv      ,\r\n"
			+ "  maintien_pers     ,\r\n"
			+ "  maintien_date     ,\r\n"
			+ "  typ_rang          ,\r\n"
			+ "  handicap          ,\r\n"
			+ "  pourcent_hand     ,\r\n"
			+ "  typ_handicap      ,\r\n"
			+ "  num_fich_hand     ,\r\n"
			+ "  niv_sal           ,\r\n"
			+ "  cod_assur         ,\r\n"
			+ "  num_assur         ,\r\n"
			+ "  cod_retr          ,\r\n"
			+ "  typ_id            ,\r\n"
			+ "  etat_sante        ,\r\n"
			+ "  dat_eff_fich_hand ,\r\n"
			+ "  dat_fin_fich_hand ,\r\n"
			+ "  ref_fonct         ,\r\n"
			+ "  nat_texte_fonct   ,\r\n"
			+ "  nouv_dat_ech      ,\r\n"
			+ "  dat_niv_sal       ,\r\n"
			+ "  dat_ass           ,\r\n"
			+ "  dat_aff_cnam      ,\r\n"
			+ "  etat_poste_trav   ,\r\n"
			+ "  dat_fin_cont      ,\r\n"
			+ "  presum_nais       ,\r\n"
			+ "  cod_fill          ,\r\n"
			+ "  suspens_ass       ,\r\n"
			+ "  cod_motif_susp    ,\r\n"
			+ "  dat_fin_suspens   ,\r\n"
			+ "  dat_deb_suspens   ,\r\n"
			+ "  chronique         ,\r\n"
			+ "  cod_cat_class     ,\r\n"

			+ "pk_get_lib.Get_personnel$NomPrenom(cod_soc,mat_pers) nom_pren\r\n"
			+ "  from PERSONNEL"
			+ "  where cod_soc = :codSoc and mat_pers = :matPers",nativeQuery=true)
	public List<PersonnelP> getPers(@Param("codSoc") String codSoc,@Param("matPers") String matPers);
	@Query(value="  select cod_soc            ,\r\n"
			+ "  mat_pers          ,\r\n"
			+ "  nom_pers          ,\r\n"
			+ "  pren_pers         ,\r\n"
			+ "  nom_pers_a        ,\r\n"
			+ "  pren_pers_a       ,\r\n"
			+ "  nom_jf            ,\r\n"
			+ "  nom_jf_a          ,\r\n"
			+ "  cin               ,\r\n"
			+ "  sexe              ,\r\n"
			+ "  cod_sit           ,\r\n"
			+ "  dat_sit           ,\r\n"
			+ "  chef_fam          ,\r\n"
			+ "  nbre_enf          ,\r\n"
			+ "  charg_enf         ,\r\n"
			+ "  charg_all         ,\r\n"
			+ "  fct_fam           ,\r\n"
			+ "  dat_ent           ,\r\n"
			+ "  dat_tit           ,\r\n"
			+ "  cod_serv          ,\r\n"
			+ "  cod_fonct         ,\r\n"
			+ "  cod_categ         ,\r\n"
			+ "  cod_cat           ,\r\n"
			+ "  cod_grad          ,\r\n"
			+ "  cod_motif         ,\r\n"
			+ "  cod_natp          ,\r\n"
			+ "  cod_stat          ,\r\n"
			+ "  dat_serv          ,\r\n"
			+ "  dat_fonct         ,\r\n"
			+ "  dat_qualf         ,\r\n"
			+ "  dat_categ         ,\r\n"
			+ "  dat_cat           ,\r\n"
			+ "  dat_grad          ,\r\n"
			+ "  dat_ech           ,\r\n"
			+ "  dat_emb           ,\r\n"
			+ "  dat_motif         ,\r\n"
			+ "  dat_nais          ,\r\n"
			+ "  etat_act          ,\r\n"
			+ "  per_mat_pers      ,\r\n"
			+ "  qualf             ,\r\n"
			+ "  cod_ech           ,\r\n"
			+ "  cod_affect        ,\r\n"
			+ "  cod_niveau        ,\r\n"
			+ "  poste_trav        ,\r\n"
			+ "  cod_metier        ,\r\n"
			+ "  dat_maj           ,\r\n"
			+ "  adm_tech          ,\r\n"
			+ "  dat_stat          ,\r\n"
			+ "  dat_cin           ,\r\n"
			+ "  lie_emi_cin       ,\r\n"
			+ "  dat_affect        ,\r\n"
			+ "  lieu_nais         ,\r\n"
			+ "  cod_lieu_geog     ,\r\n"
			+ "  dat_lieu_geog     ,\r\n"
			+ "  grp_sang          ,\r\n"
			+ "  num_retr          ,\r\n"
			+ "  cod_fil           ,\r\n"
			+ "  dat_fil           ,\r\n"
			+ "  serv_mil          ,\r\n"
			+ "  code_domaine      ,\r\n"
			+ "  cod_ur            ,\r\n"
			+ "  cod_class         ,\r\n"
			+ "  dat_class         ,\r\n"
			+ "  cod_typ_depart    ,\r\n"
			+ "  dat_depart        ,\r\n"
			+ "  dat_ur            ,\r\n"
			+ "  org_serv          ,\r\n"
			+ "  dat_poste_trav    ,\r\n"
			+ "  cod_nat_recr      ,\r\n"
			+ "  dat_adm_tech      ,\r\n"
			+ "  dat_org_serv      ,\r\n"
			+ "  maintien_pers     ,\r\n"
			+ "  maintien_date     ,\r\n"
			+ "  typ_rang          ,\r\n"
			+ "  handicap          ,\r\n"
			+ "  pourcent_hand     ,\r\n"
			+ "  typ_handicap      ,\r\n"
			+ "  num_fich_hand     ,\r\n"
			+ "  niv_sal           ,\r\n"
			+ "  cod_assur         ,\r\n"
			+ "  num_assur         ,\r\n"
			+ "  cod_retr          ,\r\n"
			+ "  typ_id            ,\r\n"
			+ "  etat_sante        ,\r\n"
			+ "  dat_eff_fich_hand ,\r\n"
			+ "  dat_fin_fich_hand ,\r\n"
			+ "  ref_fonct         ,\r\n"
			+ "  nat_texte_fonct   ,\r\n"
			+ "  nouv_dat_ech      ,\r\n"
			+ "  dat_niv_sal       ,\r\n"
			+ "  dat_ass           ,\r\n"
			+ "  dat_aff_cnam      ,\r\n"
			+ "  etat_poste_trav   ,\r\n"
			+ "  dat_fin_cont      ,\r\n"
			+ "  presum_nais       ,\r\n"
			+ "  cod_fill          ,\r\n"
			+ "  suspens_ass       ,\r\n"
			+ "  cod_motif_susp    ,\r\n"
			+ "  dat_fin_suspens   ,\r\n"
			+ "  dat_deb_suspens   ,\r\n"
			+ "  chronique         ,\r\n"
			+ "  cod_cat_class     ,\r\n"


			+ "pk_get_lib.Get_personnel$NomPrenom(cod_soc,mat_pers) nom_pren\r\n"
			+ "  from PERSONNEL",nativeQuery=true)
	public List<PersonnelP> getPersService(@Param("matChef") String matChef);
}



